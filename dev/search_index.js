var documenterSearchIndex = {"docs":
[{"location":"Mapmake/#Mapmake","page":"Mapmake","title":"Mapmake","text":"","category":"section"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"Mapmaking is available for computing hitmap and crosslink maps.","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"Mapmaking(ScanningStrategy(), split_num::Int)","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"This function divides the observation time specified by ScanningStrategy() by the number specified by split_num. This is to avoid memory overload caused by calculating a huge amount of TOD data at once.","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"For example,","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"outmap = Mapmaking(ScanningStrategy(), 12)","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"If this is set up, TOD will be calculated every month and stored in the map.","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"The outmap is a matrix, the contents of which are as follows.","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"outmap[1]: Hitmap\noutmap[2]: Crosslink map (n=1)\noutmap[3]: Crosslink map (n=2)\noutmap[4]: Crosslink map (n=3)\noutmap[5]: Crosslink map (n=4)","category":"page"},{"location":"Mapmake/","page":"Mapmake","title":"Mapmake","text":"n is the spin, a measure to define the scan-derived systematic effect. It is described in detail in this paper.","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/#Mapmake","page":"-","title":"Mapmake","text":"","category":"section"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"Mapmaking is available for computing hitmap and crosslink maps.","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"Mapmaking(ScanningStrategy(), split_num::Int)","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"This function divides the observation time specified by ScanningStrategy() by the number specified by split_num. This is to avoid memory overload caused by calculating a huge amount of TOD data at once.","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"For example,","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"outmap = Mapmaking(ScanningStrategy(), 12)","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"If this is set up, TOD will be calculated every month and stored in the map.","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"The outmap is a matrix, the contents of which are as follows.","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"outmap[1]: Hitmap\noutmap[2]: Crosslink map (n=1)\noutmap[3]: Crosslink map (n=2)\noutmap[4]: Crosslink map (n=3)\noutmap[5]: Crosslink map (n=4)","category":"page"},{"location":".ipynb_checkpoints/Mapmake-checkpoint/","page":"-","title":"-","text":"n is the spin, a measure to define the scan-derived systematic effect. It is described in detail in this paper.","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"CurrentModule = Falcons","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/#Falcons","page":"Falcons","title":"Falcons","text":"","category":"section"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"This is the documentation of Falcons(Fast Algorithm for Locus Computing ON the Sky), a package for fast simulation of satellite observations.","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"CMB polarimetric satellites such as LiteBIRD set up an appropriate scan strategy to reduce systematic errors, and Falcons can calculate all-sky hit maps, crosslink maps, etc. by simply setting the parameters of this scan strategy. It also supports observations with multi-channel detectors.","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/#Installation","page":"Falcons","title":"Installation","text":"","category":"section"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"From the Julia REPL, run","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"import Pkg\nPkg.add(\"Falcons\")","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/#Tutorial","page":"Falcons","title":"Tutorial","text":"","category":"section"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"The tutorial is available on the github page in jupyternotebook format. Please refer to here.","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/#Documentation","page":"Falcons","title":"Documentation","text":"","category":"section"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"The documentation was built using Documenter.jl.","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"Falcons","title":"Falcons","text":"Modules = [Falcons]","category":"page"},{"location":"Scanning/#Scanning-strategy","page":"Scanning","title":"Scanning strategy","text":"","category":"section"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"To define the scanning strategy for a satellite, set the ScanningStrategy structure.","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"mutable struct ScanningStrategy\n    nside::Int\n    times::Int\n    sampling_rate::Int\n    alpha::AbstractFloat\n    beta::AbstractFloat\n    prec_period::AbstractFloat\n    spin_rpm::AbstractFloat\n    hwp_rpm::AbstractFloat\n    FP_theta::AbstractArray{AbstractFloat,1}\n    FP_phi::AbstractArray{AbstractFloat,1}\n    start_point::AbstractString\n    ScanningStrategy() = new()\nend","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"To set it up, define constructor ss as follows.","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"ss = ScanningStrategy()","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"You can assign a value to ss by accessing it as follows.","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"ss.nside = 128\nss.times = 100","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"No default values are set, so be sure to specify values for all variables by the user.","category":"page"},{"location":"Scanning/#Generate-pointing-TOD","page":"Scanning","title":"Generate pointing TOD","text":"","category":"section"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"Once the scanning strategy is determined, computing the pointing is straightforward.","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"theta_tod, phi_tod, psi_tod = get_scan_tod(ScanningStrategy(), start::Int, stop::Int)","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"Enter an integer value for the time to be calculated in the start and stop fields.","category":"page"},{"location":"Scanning/","page":"Scanning","title":"Scanning","text":"theta_tod and phi_tod contain the pointing data in chronological order, and psi_tod contains the scan angle according to the COSMO(HEALPix) definition.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Falcons","category":"page"},{"location":"#Falcons","page":"Home","title":"Falcons","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the documentation of Falcons(Fast Algorithm for Locus Computing ON the Sky), a package for fast simulation of satellite observations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CMB polarimetric satellites such as LiteBIRD set up an appropriate scan strategy to reduce systematic errors, and Falcons can calculate all-sky hit maps, crosslink maps, etc. by simply setting the parameters of this scan strategy. It also supports observations with multi-channel detectors.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"From the Julia REPL, run","category":"page"},{"location":"","page":"Home","title":"Home","text":"import Pkg\nPkg.add(\"Falcons\")","category":"page"},{"location":"#Tutorial","page":"Home","title":"Tutorial","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The tutorial is available on the github page in jupyternotebook format. Please refer to here.","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The documentation was built using Documenter.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Falcons]","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/#Scanning-strategy","page":"-","title":"Scanning strategy","text":"","category":"section"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"To define the scanning strategy for a satellite, set the ScanningStrategy structure.","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"mutable struct ScanningStrategy\n    nside::Int\n    times::Int\n    sampling_rate::Int\n    alpha::AbstractFloat\n    beta::AbstractFloat\n    prec_period::AbstractFloat\n    spin_rpm::AbstractFloat\n    hwp_rpm::AbstractFloat\n    FP_theta::AbstractArray{AbstractFloat,1}\n    FP_phi::AbstractArray{AbstractFloat,1}\n    start_point::AbstractString\n    ScanningStrategy() = new()\nend","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"To set it up, define constructor ss as follows.","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"ss = ScanningStrategy()","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"You can assign a value to ss by accessing it as follows.","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"ss.nside = 128\nss.times = 100","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"No default values are set, so be sure to specify values for all variables by the user.","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/#Generate-pointing-TOD","page":"-","title":"Generate pointing TOD","text":"","category":"section"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"Once the scanning strategy is determined, computing the pointing is straightforward.","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"theta_tod, phi_tod, psi_tod = get_scan_tod(ScanningStrategy(), start::Int, stop::Int)","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"Enter an integer value for the time to be calculated in the start and stop fields.","category":"page"},{"location":".ipynb_checkpoints/Scanning-checkpoint/","page":"-","title":"-","text":"theta_tod and phi_tod contain the pointing data in chronological order, and psi_tod contains the scan angle according to the IAU definition.","category":"page"}]
}
